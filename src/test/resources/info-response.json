{
    "id": "50f7d7e5f1b0ea1624000002",
    "owner":"4fb7e76ac2f9e3834c000000",
    "dateAdded":"2013-01-17T11:52:21",
    "versions":[
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","sourceFiles-windows-x86_mscoff":["lib/win-i386-mscoff/libeay32.lib","lib/win-i386-mscoff/ssleay32.lib"],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-05-16T16:10:37Z","readme":"Content of README here","commitID":"953128419922a38725812fc2bbc59af70958ec36","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"libhttp2":"~>0.2.3"},"targetType":"library","version":"~http2-botan","configurations":[{"platforms":["windows-x86","posix"],"systemDependencies":"libevent 2.0.x, OpenSSL 1.0.x","libs-windows":["wsock32","ws2_32","advapi32"],"versions":["OpenSSL","VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib","lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib","lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll","lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"dependencies":{"libevent":"~>2.0.1","openssl":">=1.0.0+1.0.0e"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll","lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"dependencies":{"botan":"~>1.11.12","libasync":"~>0.7.3"},"targetType":"library","versions":["Botan","VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync_botan"},{"dflags-windows-x86":["-m32mscoff"],"dependencies":{"botan":"~>1.11.12","libasync":"~>0.7.3"},"targetType":"library","subConfigurations":{"botan":"32mscoff","memutils":"32mscoff","libasync":"32mscoff","libhttp2":"32mscoff"},"versions":["Botan","VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync_botan_win32"},{"systemDependencies":"OpenSSL 1.0.x","versions":["OpenSSL","VibeUseNativeDriverType","VibeLibasyncDriver"],"sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"libasync_openssl","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"dependencies":{"openssl":">=1.0.0+1.0.0e","libasync":"~>0.7.3"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"platforms":["posix"],"systemDependencies":"libev, OpenSSL 1.0.x","versions":["OpenSSL","VibeLibevDriver","LIBEV4"],"sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"libev","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"dependencies":{"openssl":">=1.0.0+1.0.0e","libev":"~>5.0.0"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"platforms":["posix"],"lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"systemDependencies":"libev, OpenSSL 1.0.x","versions":["OpenSSL","VibeLibevDriver","LIBEV4"],"sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"libev-travis","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"dependencies":{"openssl":">=1.0.0+1.0.0e","libev":"~>5.0.0"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"platforms":["windows"],"systemDependencies":"OpenSSL 1.0.x","libs-windows":["wsock32","ws2_32","advapi32","user32"],"versions":["OpenSSL","VibeWin32Driver"],"name":"win32","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"platforms":["windows"],"versions":["OpenSSL","VibeWinrtDriver"],"name":"winrt","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib","lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","libhttp2":"~>0.2.5"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2015-11-27T08:45:24Z","readme":"Content of README here","commitID":"10f659f7b7d172667d4c4173437e71b621e07b78","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"~http2-botan-cleanup","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-03-14T13:58:01Z","readme":"Content of README here","commitID":"47dfd7b7056806a5c9c1cc44878c9146222403c5","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"~http_speedup","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-03-14T14:00:30Z","readme":"Content of README here","commitID":"e5ca13fa1e3ff843cfc8f79d407060a5d186b812","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"~issue_1994_json_trailing_comma","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*","taggedalgebraic":"~>0.11.13"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tstring opensslVersion;\n\ttry {\n\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\tif (res.status == 0)\n\t\t\topensslVersion = res.output.strip();\n\t} catch (Exception e) {}\n\n\tif (!opensslVersion.length) try\n\t{\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\tversion (OSX) {\n\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {}\n\tif (!opensslVersion.length)\n\t{\n\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t writeln(\"\\tAssuming version 1.0.0.\");\n\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t opensslVersion = \"1.0.0\";\n\t}\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-04-17T18:14:55Z","readme":"Content of README here","commitID":"dd0721eb2ffa7b09054f18504e208b01e9681d1d","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"~json_taggedunion","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-03-03T21:53:42Z","readme":"Content of README here","commitID":"1e8a42cdf1e581fd01181ccf2e43be12fb9e3082","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"~nogc_url2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"Placeholder for the vibe-http package","dependencies":{"vibe-http":">=0.9.0 <2.0.0-0"},"packageDescriptionFile":"dub.sdl","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-02-06T12:57:45Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"773c68367e8a9d71147de0eaeae886e9fefdc792","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"~switch_to_vibe_http","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-09-02T05:59:33Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"95b02fee00f5be032a6aeda48baa8607bcc4b6d0","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"~v0.9.x","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2025-08-04T13:29:25Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"8b5c7a72aa0dfa4d239efacbc5e6bba7f7e7e272","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"~master","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-02-12T07:46:05Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"fe5a5607ff7e2aa849ac7ce2e7eaae2630a169f6","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.0-beta.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"libs-posix":["ssl","crypto"],"libs-windows":["wsock32","ws2_32"],"versions":["LIBEV4"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-03-22T08:23:44Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nRecommended use is via DUB\n--------------------------\n\nInstead of installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can use vibe.d by adding the following\ndependency to a `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.12\"\n        }\n    }\n\nInvoking `dub` will then automatically download the latest vibe.d and compile\nand run the project.\n\n\nInstallation on Windows\n-----------------------\n\n - Install DMD using the installer on <http://dlang.org/download.html>\n - Unzip the vibe archive (or git clone) and add the bin/ subfolder to your PATH variable\n - Run any vibe apps using `vibe` from the application's root directory\n\n\nInstallation on Mac using brew\n------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nUnzip the vibe archive (or git clone) and use the \"vibe\" script to run applications.\n \nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path everytime:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\n\nInstallation on Linux (Debian/Ubuntu/Mint, using apt)\n-----------------------------------------------------\n\nGo to <https://code.google.com/p/d-apt/wiki/APT_Repository> and follow the\ninstructions. This will setup the APT repository of Jordi Sayol, who maintains\na number of D packages for Debian based systems (*).\n\nInstalling is then done using\n\n    sudo apt-get install vibe\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nInstallation on Linux (Debian/Ubuntu/Mint, manually)\n-----------------------------------------------\n\nInstall vibe dependencies\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.058-0_i386.deb\"\n    sudo dpkg -i dmd_2.058-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.058-0_amd64.deb\"\n    sudo dpkg -i dmd_2.058-0_amd64.deb\n\n\nUnzip the vibe archive (or git clone) and use the \"vibe\" script to run applications\n\nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path everytime:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nA more complete alterative is to run `./setup-linux.sh` which will install/uninstall vibe.d in /usr/local. This will also create a configuration file for setting a user/group for privilege lowering.\n\n\nInstallation on Linux (generic)\n-------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nAfter that, unzip the vibe archive (or git clone) and use the \"vibe\" script to run applications\n\nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path on every invocation:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nor\n\n    su -c ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nA more complete alterative is to run `./setup-linux.sh` which will install/uninstall vibe.d in /usr/local. This will also create a configuration file for setting a user/group for privilege lowering.\n\n(*) Note that some current linux distributions such as Debian squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nInstallation on FreeBSD\n-----------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nYou can now run applications by directly running `/path/to/vibe.d/bin/vibe`, putit in your PATH or make a symlink in `/usr/bin`.\n\nA more complete alterative is to run `./setup-freebsd.sh` which will install the symlink and also creates a configuration file for setting a user/group for privilege lowering.\n","commitID":"2a04e525b5aac7ee08b5306a950aa74a4189990c","excludedSourceFiles":["source/vibe/core/mutex.d","source/vibe/core/signal.d","source/vibe/crypto/md5.d","source/vibe/crypto/sha1.d","source/vibe/crypto/ssl.d","source/vibe/stream/stream.d"],"description":"Asynchronous I/O framework","configurations":[{"copyFiles-windows-x86":["lib/win-i386/libevent.dll"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"libs-posix":["event","event_pthreads"],"versions":["VibeLibeventDriver"],"name":"libevent"},{"platforms":["posix"],"targetType":"library","versions":["VibeLibevDriver"],"libs-posix":["ev"],"name":"libev"},{"platforms":["windows"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","versions":["VibeWinrtDriver"],"name":"winrt"}],"homepage":"http://vibed.org/","version":"0.7.14","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"libs-posix":["ssl","crypto"],"libs-windows":["wsock32","ws2_32"],"versions":["LIBEV4"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-04-27T10:45:52Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nRecommended use is via DUB\n--------------------------\n\nInstead of installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can use vibe.d by adding the following\ndependency to a `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.12\"\n        }\n    }\n\nInvoking `dub` will then automatically download the latest vibe.d and compile\nand run the project.\n\n\nInstallation on Windows\n-----------------------\n\n - Install DMD using the installer on <http://dlang.org/download.html>\n - Unzip the vibe archive (or git clone) and add the bin/ subfolder to your PATH variable\n - Run any vibe apps using `vibe` from the application's root directory\n\n\nInstallation on Mac using brew\n------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nUnzip the vibe archive (or git clone) and use the \"vibe\" script to run applications.\n \nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path everytime:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\n\nInstallation on Linux (Debian/Ubuntu/Mint, using apt)\n-----------------------------------------------------\n\nGo to <https://code.google.com/p/d-apt/wiki/APT_Repository> and follow the\ninstructions. This will setup the APT repository of Jordi Sayol, who maintains\na number of D packages for Debian based systems (*).\n\nInstalling is then done using\n\n    sudo apt-get install vibe\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nInstallation on Linux (Debian/Ubuntu/Mint, manually)\n-----------------------------------------------\n\nInstall vibe dependencies\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.058-0_i386.deb\"\n    sudo dpkg -i dmd_2.058-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.058-0_amd64.deb\"\n    sudo dpkg -i dmd_2.058-0_amd64.deb\n\n\nUnzip the vibe archive (or git clone) and use the \"vibe\" script to run applications\n\nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path everytime:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nA more complete alterative is to run `./setup-linux.sh` which will install/uninstall vibe.d in /usr/local. This will also create a configuration file for setting a user/group for privilege lowering.\n\n\nInstallation on Linux (generic)\n-------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nAfter that, unzip the vibe archive (or git clone) and use the \"vibe\" script to run applications\n\nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path on every invocation:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nor\n\n    su -c ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nA more complete alterative is to run `./setup-linux.sh` which will install/uninstall vibe.d in /usr/local. This will also create a configuration file for setting a user/group for privilege lowering.\n\n(*) Note that some current linux distributions such as Debian squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nInstallation on FreeBSD\n-----------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nYou can now run applications by directly running `/path/to/vibe.d/bin/vibe`, putit in your PATH or make a symlink in `/usr/bin`.\n\nA more complete alterative is to run `./setup-freebsd.sh` which will install the symlink and also creates a configuration file for setting a user/group for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"6815531e4244755e634f6d8ce9625d0745b477bc","excludedSourceFiles":["source/vibe/core/mutex.d","source/vibe/core/signal.d","source/vibe/crypto/md5.d","source/vibe/crypto/sha1.d","source/vibe/crypto/ssl.d","source/vibe/stream/stream.d"],"description":"Asynchronous I/O framework","importPaths":["import","source"],"targetType":"library","version":"0.7.15","configurations":[{"libs-posix":["event","event_pthreads"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"targetType":"library","versions":["VibeLibevDriver"],"libs-posix":["ev"],"name":"libev"},{"platforms":["windows"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","versions":["VibeWinrtDriver"],"name":"winrt"}],"homepage":"http://vibed.org/","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"libs-windows":["wsock32","ws2_32"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-06-26T06:26:57Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nRecommended use is via DUB\n--------------------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init &lt;name&gt;` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.15\"\n        }\n    }\n\nInvoking `dub` will then automatically download the latest vibe.d and compile\nand run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nInstallation on Windows\n-----------------------\n\n - Install DMD using the installer on <http://dlang.org/download.html>\n - Unzip the vibe archive (or git clone) and add the bin/ subfolder to your PATH variable\n - Run any vibe apps using `vibe` from the application's root directory\n\n\nInstallation on Mac using brew\n------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nUnzip the vibe archive (or git clone) and use the \"vibe\" script to run applications.\n \nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path everytime:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\n\nInstallation on Linux (Debian/Ubuntu/Mint, using apt)\n-----------------------------------------------------\n\nGo to <https://code.google.com/p/d-apt/wiki/APT_Repository> and follow the\ninstructions. This will setup the APT repository of Jordi Sayol, who maintains\na number of D packages for Debian based systems (*).\n\nInstalling is then done using\n\n    sudo apt-get install vibe\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nInstallation on Linux (Debian/Ubuntu/Mint, manually)\n-----------------------------------------------\n\nInstall vibe dependencies\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.058-0_i386.deb\"\n    sudo dpkg -i dmd_2.058-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.058-0_amd64.deb\"\n    sudo dpkg -i dmd_2.058-0_amd64.deb\n\n\nUnzip the vibe archive (or git clone) and use the \"vibe\" script to run applications\n\nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path everytime:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nA more complete alterative is to run `./setup-linux.sh` which will install/uninstall vibe.d in /usr/local. This will also create a configuration file for setting a user/group for privilege lowering.\n\n\nInstallation on Linux (generic)\n-------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nAfter that, unzip the vibe archive (or git clone) and use the \"vibe\" script to run applications\n\nOptionally, it's recommended to create a symlink in /usr/bin so you don't\nhave to specify the path on every invocation:\n \n    sudo ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nor\n\n    su -c ln -s /path/to/vibe/bin/vibe /usr/bin/vibe\n\nA more complete alterative is to run `./setup-linux.sh` which will install/uninstall vibe.d in /usr/local. This will also create a configuration file for setting a user/group for privilege lowering.\n\n(*) Note that some current linux distributions such as Debian squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nInstallation on FreeBSD\n-----------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nYou can now run applications by directly running `/path/to/vibe.d/bin/vibe`, putit in your PATH or make a symlink in `/usr/bin`.\n\nA more complete alterative is to run `./setup-freebsd.sh` which will install the symlink and also creates a configuration file for setting a user/group for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"a490675d1bf301deec8ab9245c7a04de27f8271f","excludedSourceFiles":["source/vibe/core/mutex.d","source/vibe/core/signal.d","source/vibe/crypto/md5.d","source/vibe/crypto/sha1.d","source/vibe/crypto/ssl.d","source/vibe/stream/stream.d"],"description":"Asynchronous I/O framework","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.16","configurations":[{"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver"],"name":"libev"},{"platforms":["windows"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","versions":["VibeWinrtDriver"],"name":"winrt"}],"homepage":"http://vibed.org/","copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-09-09T06:12:04Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nInvoking `dub` will then automatically download the latest vibe.d and compile\nand run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-util\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"d1de713067216c7dad618481541e5eda8195e5b9","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.17","configurations":[{"libs-windows":["wsock32","ws2_32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-13T19:25:37Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"343e699c401c5d83d26f05d65b4f48b75e0ddc95","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18-beta.1","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-15T15:22:51Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"91400f06f4c80558ce9d9a930a99a102a31c49d8","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18-beta.2","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-19T20:12:54Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"95dfa2e96545b3973f6cb5d97b4db8a1a78a72fb","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18-beta.3","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-21T08:47:35Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"bf05c15a718d4d8f7b75b17964a3b6e05336bff1","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18-rc.1","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-22T09:04:33Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"42a5fe39bf048943d5b78204cdfc34f0c72073fe","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18-rc.2","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-23T10:24:04Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"866f7abb72605a05cf31b2d17d40fb0e6d6fea30","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18-rc.3","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-26T07:28:39Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"07e67febd73653f452c896288dab710dc4fa5b18","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.18","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-11-30T11:06:02Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"c27c45a22f8cd94d0c22ab9e2b5141d633eada34","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-beta.1","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/vibe.d","license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2013-12-15T18:56:06Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://github.com/mxcl/homebrew/wiki/installation>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSkL raw.github.com/mxcl/homebrew/go)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"bec5336a157c9895bad1c64f2b06a34c69aed208","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-beta.2","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-02-11T09:05:45Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"ac12c412e2c656b69dc4e63210cca934ad566cbc","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-beta.3","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-02-13T13:52:50Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"97458a61058baa3e005dbbb0f93aac89aa94b00a","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-beta.4","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"package.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-02-25T06:45:50Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"9f79ce23f40fe8293cb9d39327b3ffa90008654f","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-rc.1","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-03-17T15:34:55Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"8202a0533d61991e9acb72aee8fafbf554fc2390","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-rc.2","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-03-28T07:12:12Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"415005fd545bd3ccedbbfcbae506fc9296c509f9","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-rc.3","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-04-02T19:58:38Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"26daf63b7374396e3847f3b2ac9fef168b6de0d9","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19-rc.4","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-04-09T19:35:40Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"7812f118df59be5e0a153d4beb8fb8209ce42d70","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19+openssl-1.0.1g","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-04-09T17:37:13Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"7f1becacd7c9a04ef5f363ac985f17bbaca6d737","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.19","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2013 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-04-09T19:01:02Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"b17894dd936c392bc25259d91d55582890d6daea","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.20-alpha.1","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Public","--ex","deimos.","--ex","vibe.core.drivers.","--ex","etc.","--ex","std.","--ex","core."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-05-07T18:18:08Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"aab803a013b0229e1fd6cde08e25406c07886139","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","version":"0.7.20-beta.1","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver","VibeDefaultMain"],"name":"unittest","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"executable","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.20-beta.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-05-13T20:03:44Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"9bec3ba88f0b76ea068a57546181f2bbcb7b2f43","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.20-beta.3","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-05-16T18:31:26Z","readme":"vibe.d\n======\n\nvibe.d is an asynchronous I/O and web application framework written in D.\nIt already contains many supplemental features such as database support\nto be able to offer a complete development toolbox. Extensions are\nsupported in the form of [DUB modules](http://registry.vibed.org/).\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is now recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create a new project by running\n`dub init <name>` and enable the use of vibe.d by adding the following\ndependency to the `package.json` file in your project's directory:\n\n    {\n        \"name\": \"your-project-identifier\",\n        \"dependencies\": {\n            \"vibe-d\": \">=0.7.16\"\n        }\n    }\n\nThe latest versions of DUB also support `dub init <name> vibe.d`, which\nautomatically adds the required dependency. Invoking `dub` will then\nfetch the latest vibe.d and compile and run the project.\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the package description of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"d3c5381af3ad9ece0d88d58916e6c859db877309","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.20-rc.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-05-18T11:19:40Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"afcb1f728c06900592dbfe0875553af75880805a","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.20-rc.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-05-20T15:41:32Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"4d17f1be5553f8d384c5a6a14a07709c7194be9e","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.20","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-06-03T18:22:40Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"0b0f76d79693e1920a00692bbe89d1c50ab98658","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-alpha.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-06-23T09:23:35Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"350ec02a33ea2e81973b553c1cb5479469034768","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-alpha.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-08-07T15:04:53Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"0d2f1f16c17d4676ae0a36cc2b8febf93a01918f","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-alpha.3","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-08-08T09:36:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"b7140030f4d2b1d2739c2502d70cd2edc816e0ec","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-alpha.4","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-08-13T15:34:41Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"73884b4cc41d29097329d724b4519268bce89647","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-beta.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-09-04T13:58:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"a46a196336fbb0c3159c9f1db5b3e630e81dacc7","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-beta.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-09-08T14:24:08Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"ac8305b6b7aff02f4dce549d0dd74afd8b00832b","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-beta.3","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-09-11T13:32:59Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"f02492cb1d1ef3f6fe81798ad7a695f91c54a0bb","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-beta.4","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-09-19T09:25:35Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"d4259b7cfac78707c43dc355bbe8476191c5a267","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-rc.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-10-01T11:42:02Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"45c417dc9a925be21bb55d6c3fa203935b4b2318","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"~master"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~master"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~master"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-rc.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-10-02T17:22:00Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"c4ae00ae437800dcf5a98b2bd995b4e78fcf58fb","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~>4.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-rc.3","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-10-14T16:38:52Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"e00f0831f14f5b51adf8719404b385996cb40050","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~>4.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21-rc.4","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-10-26T11:35:32Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"c1eaad33218da888895000c090b2e087ff1910bf","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~>4.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.21","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2014-11-18T17:08:05Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"bac1aefae374d374015a0c27708e9c5387295d33","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":"1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"platforms":["posix"],"dependencies":{"libev":"~>4.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.22-rc.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-01-11T16:48:50Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"10731f37585dde7567ce39c152365b1e197e323a","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.6.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>4.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.22","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-01-12T09:30:26Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.png)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"847563a00117a63db00aa0051edbab536e75c20f","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.6.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>4.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.23-beta.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-09T11:29:32Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_i386.deb\"\n    sudo dpkg -i dmd_2.062-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://ftp.digitalmars.com/dmd_2.062-0_amd64.deb\"\n    sudo dpkg -i dmd_2.062-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"4ba71766983229db6cf24fe1d582b0e384cfa3ec","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.0"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.23-beta.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-14T08:58:05Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"87e5fb0ed2da7abc9f1104888e35cbbbdb916384","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.0"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.23-rc.1","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-17T07:43:50Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"7e44bf0b03605f6f37643ef679a802d67cce89a1","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.0"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.23-rc.2","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-17T15:12:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"6f1f818007e2ea234c466769ab3dade265c5e2b4","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"version":"0.7.23-rc.3","packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-24T11:43:46Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"23d1f741d3724fa1aae04866d293701fca5fda83","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","buildTypes":{"unittest":{"buildOptions":["debugMode","unittests"],"buildOptions-posix":["debugInfo"]}},"configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-24T22:26:11Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"0118a2d8ac2dcbf8ae563e58940f3125051f4644","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.23-rc.4","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-03-24T22:26:11Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"0118a2d8ac2dcbf8ae563e58940f3125051f4644","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.23","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-06-03T11:11:01Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use \n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n \nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"a373835c4ac71db7c7d0b70fc925eb8410d8f4ab","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24-beta.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.3"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","lflags":["-Llibev-4.19/.libs/","-rpath=libev-4.19/.libs/"],"versions":["VibeLibevDriver","LIBEV4"],"name":"libev-travis"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-06-22T06:43:27Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"493899f1abc427817ee5e322701422c400d0d966","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24-beta.2","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.3"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-07-01T11:08:24Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"19d3463068cadf979c3537ca36169bacb44228e4","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24-beta.3","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.3"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-07-20T07:54:04Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"9a27e21d860eff2988a85b049e6b726997b5643e","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24-beta.4","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2014 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-07-26T00:21:53Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"38784138ad8cc8f442bd0e76a1b740040ff33fe5","description":"Asynchronous I/O framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24-rc.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-07-31T16:53:52Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"0b7e73ac42ede74f6c038f13933dc5da55061fae","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24-rc.2","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-08-10T16:54:46Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.065\n- DMD 2.066\n- DMD 2.067\n- GDC 4.9.0 (FE: 2.065)\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.14.0 (FE: 2.065)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"e80dcf49badd453ebeb36f31b54206b9018a8da8","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.24","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-08-16T11:29:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"59be07713b080f9571f24f47e18ca9644ff535c8","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.25-alpha.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-09-13T10:00:56Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"c76c10a65da91972bfbcb7937a9a786bfbba1878","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.25-rc.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-09-19T17:38:03Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.066.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2014/dmd_2.066.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.066.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"5d430f1e687f01e726fa085cb18b3fc6140f0ec4","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.25","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-09-28T06:30:17Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"7137a5fd21b5830ae6d5104efc270704fbb703c6","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-alpha.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-09-29T05:47:25Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"b2043e39edf7f012b57a6690e57f43fe7edca945","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-alpha.2","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-10-13T05:44:22Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"7560a8ce4fed508a17ab190c39ec4e105a5d57ed","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-alpha.3","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-10-20T06:06:42Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"af163c2b38826b180af65d9febf77374138e6031","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-beta.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-10-30T07:23:14Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"07752de3778b07dcded187b55619a6a17948fc5f","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-rc.1","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-11-02T15:02:09Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"289a35b9ddbcc4dd0f9a5ba6470a46b1e7c52511","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-rc.2","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-11-03T06:41:54Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"a9d14ac223b8cc91eb9caf508e3bf26ab63bf534","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26-rc.3","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"name":"vibe-d","sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"date":"2015-11-04T07:16:56Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"commitID":"bd4bcf74deb850b227d561b6c0617d2f9e8959a6","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"openssl":">=1.0.0+1.0.0e"},"targetType":"library","version":"0.7.26","configurations":[{"platforms":["windows-x86","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2015-11-11T11:34:48Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"0691c72e19bfb3bb5523a18126d865e841439ead","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2015-12-02T08:28:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"544ae94b162f46f5463619290f42681735f7d1cb","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-01-02T16:48:43Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"dddb1f607c0b77ea99119003c77ef318b7ebf959","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"0.7.5"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-01-22T09:50:46Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"e318157075a2fcbfbb280a638cd6f9af44fa9ce4","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-01-29T16:15:27Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"7f8c5a6980c5bd0b7e9fbdf580c14add1582536d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-01-29T16:37:59Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"9966dfe6cde863a93a6723c6fcf9d5a192e57e9d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-02-09T15:41:22Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5415eeb60973eec78a70c37e0633798a0a085539","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.27","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-02-15T07:38:53Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"4d3404181f754a054b3584447a8114a097f4b1d3","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.28-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"libevent 2.0.x or libev, OpenSSL 0.9.x or 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["posix"],"dependencies":{"libev":"~>5.0.0"},"targetType":"library","versions":["VibeLibevDriver","LIBEV4"],"name":"libev"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-02-27T13:02:27Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support the 3 latest minor releases of D.\nAt the moment, it means that the following compilers are supported and tested:\n- DMD 2.069\n- DMD 2.068\n- DMD 2.067\n- DMD 2.066\n- GDC 4.9.2 (FE: 2.066)\n- LDC 0.15.1 (FE: 2.066)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"0cef07e9379f06cbb58f2e0ecd7689ef13fcf458","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.28","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libev"},"name":"libev"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-02-15T07:38:53Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"4d3404181f754a054b3584447a8114a097f4b1d3","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-02-27T08:34:58Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5b556622894a2617bfa2d1b0a1d9bce8e18ed1c4","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-04-05T12:02:45Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"ff33a81640509493cad966c52c5a1c6abf32fb32","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-04-21T18:21:12Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"9b775618ed72e542e91d91dfe0e1218068d7b0cf","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-06-02T06:59:28Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"1633d2d381252b164b5e89a569d63df7bc572253","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-06-26T09:56:33Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"e271b5c71f2361311b6e0620e2e9cb949d06ca08","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-07-04T07:23:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"94796d83f63ae42578ba34bf3465387a8700c26b","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.29","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-05-13T21:15:48Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"cd07db8f2665ccdb5378a91f3a5841a821e50554","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.30-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-06-02T07:01:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"bfa0a3062ffad4e0f4e3ddeeaf513de6833bb95c","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.30-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},{"packageDescriptionFile":"dub.json","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:utils":"*","vibe-d:data":"*","openssl":">=1.0.0+1.0.0e"},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2015 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":[],"date":"2016-06-24T11:28:28Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"dae69bc2702247e0b09b070a4eb72636c4e3d283","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:diet":"*","vibe-d:core":"*"},"targetType":"library","version":"0.7.30-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"libs-ldc":["z"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"version":">=1.0.0-alpha.2 <1.1.0-0","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-07-25T08:55:48Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5709950e5682acab6e04f4608957575fdc5387c3","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.30-alpha.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"libs-ldc":["z"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"version":">=1.0.0-alpha.2 <1.1.0-0","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-08-24T06:34:48Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"15d3ea1eb8d2004b4a217fe9aa96cdcab766251d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.30-alpha.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"libs-ldc":["z"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"version":">=1.0.0-alpha.2 <1.1.0-0","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-08-31T08:41:24Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.070.0\n- DMD 2.069.2\n- DMD 2.068.2\n- DMD 2.067.1\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n- LDC 0.16.1 (FE: 2.067.1)\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"19e72591a01f4d02c4c194b2e8d4a371c90e7870","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.30-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},
        {"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"libs-ldc":["z"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-09-29T13:36:47Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"3161c50210633d8e95940554fb3823175e3533a1","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.30-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"libs-ldc":["z"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-10-14T18:51:35Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"ab1ac33c564ad8d593104e30cc93eb1779c88d4a","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.30-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"libs-ldc":["z"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.7.8"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-10-31T20:09:02Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"e2480da6f421108869f6007a2198134549cc522d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.30","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-12-19T14:35:31Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"ce8377dfc8007f7ac204603b0507331fa2409869","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-01-31T09:35:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"27de7411a4241d0ff75d6fdb399005171e63e560","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-02-02T21:30:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5b741d0edd45c5e9298f42521c52e92ebeddc9a4","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-03-24T09:08:51Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5792d3e6a0e439cf14539f4f517fe55ee964c31c","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-03-24T13:58:02Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"30b373d51d405634dbe7554639dc5b6c650f98a5","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-03-29T07:43:40Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"d51f615074eb5c9b89dab54678b17005d74ea09e","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31-rc.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-04-10T19:27:43Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"d73000226eaf1e3a4b7c219acefa1724965f27c7","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.31","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-04-10T21:31:49Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"712b6cb9cffd84e83cefc653c1570e5af29c8b09","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.32-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-09-04T13:56:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"b514be67b8743601c304aec04ce430053b357209","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.32-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","libs-gdc":["z"],"configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-09-04T14:18:04Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"116b9e885ba3229ea0fcd2455ad617ca666108e7","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.32","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","sourceFiles-windows-x86_mscoff":["lib/win-i386-mscoff/libeay32.lib","lib/win-i386-mscoff/ssleay32.lib"],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-04-30T11:24:29Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"bf77c7e0a8c5ce8d45dedca2bf3391adcb68b77f","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.33-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"copyFiles-windows-x86":["lib/win-i386/libeay32.dll","lib/win-i386/ssleay32.dll"],"mainSourceFile":"source/vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"libs-posix-ldc":["z"],"name":"core","sourceFiles-windows-x86_64":["lib/win-amd64/libeay32.lib","lib/win-amd64/ssleay32.lib"],"sourcePaths":["source/vibe/core","source/vibe/crypto","source/vibe/inet","source/vibe/stream","source/vibe/textfilter"],"sourceFiles-windows-x86":["lib/win-i386/eay.lib","lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libeay32.dll","lib/win-amd64/ssleay32.dll"],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","botan":{"version":"~>1.12.0","optional":true},"openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","sourceFiles-windows-x86_mscoff":["lib/win-i386-mscoff/libeay32.lib","lib/win-i386-mscoff/ssleay32.lib"],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"description":"Low level utility functionality","sourcePaths":["source/vibe/utils","source/vibe/internal"],"targetType":"library","name":"utils"},{"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"targetType":"library","sourcePaths":["source/vibe/data"],"name":"data"},{"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:data":"*","vibe-d:core":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true}},"targetType":"library","sourcePaths":["source/vibe/http"],"name":"http"},{"description":"SMTP client support","dependencies":{"vibe-d:core":"*"},"targetType":"library","sourcePaths":["source/vibe/mail"],"name":"mail"},{"description":"Diet HTML template system","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/templ"],"name":"diet"},{"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/mongo"],"name":"mongodb"},{"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/db/redis"],"name":"redis"},{"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"targetType":"library","sourcePaths":["source/vibe/web"],"name":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-05-16T08:42:08Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=0.7.x)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/0.7.x?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/0.7.x)\n\n\nEnd of life notice\n------------------\n\nThe 0.7.x branch of vibe.d is no longer actively developed or supported. The\nlatest version 0.7.34 is the last official release. Any existing code should\nupgrade to 0.8.x. To ease the transition, it is recommended to upgrade to 0.8.1\nfirst and then to the latest release.\n\nNote that starting with 0.8.3, the default event loop implementation is\n[vibe-core](https://github.com/vibe-d/vibe-core). If you encounter any issues,\nyou can [switch back to the classic libevent driver](http://vibed.org/blog/posts/vibe-release-0.8.3#switching-back-to-the-classic-vibe-d-core)\nfor now. Please be sure to open a [bug report on GitHub](https://github.com/vibe-d/vibe-core/issues/new)\nin this case, as the libevent (and win32) driver are planned to be removed by\nthe end of this year.\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.080.0\n- DMD 2.079.1\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.2)\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"b75a021204f95fb96d8e345d39a1b4722f42e875","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.7.33","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"],"packageDescriptionFile":"dub.sdl","libs-ldc":["z"],"name":"stream","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"sourcePaths":["."],"sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","importPaths":["."],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"packageDescriptionFile":"dub.sdl","name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"crypto"},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true},"vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2016-12-19T01:20:16Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- DMD 2.068.2\n- LDC 1.0.0 (FE: 2.070.2)\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"6a95a5ff60d5854654cde3e099b47de52e981fd6","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"],"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"sourcePaths":["."],"sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","importPaths":["."],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"packageDescriptionFile":"dub.sdl","name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"crypto"},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":{"default":true,"version":"~>1.1","optional":true},"vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-01-31T09:24:28Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.072.0\n- DMD 2.071.2\n- DMD 2.070.2\n- DMD 2.069.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"8bee7497631d4bdfe202eaf7b28509c4bce99735","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"],"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"sourcePaths":["."],"sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","importPaths":["."],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"packageDescriptionFile":"dub.sdl","name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"crypto"},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.1","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-02-02T21:37:06Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.073.0\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.1.0 (currently still in beta, FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5ccc30cc3641f5877333f38e30f85b9b81915bd8","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"],"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"sourcePaths":["."],"sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","importPaths":["."],"libs-gdc":["z"],"lflags-osx":["-L/usr/local/opt/openssl/lib"]},{"packageDescriptionFile":"dub.sdl","name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"crypto"},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.1","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-02-12T08:09:20Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.073.0\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.1.0 (currently still in beta, FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"9a1a087ab8890987b9ef381498590be16a7cb56d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-03-10T07:48:34Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.073.0\n- DMD 2.072.2\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.1.0 (currently still in beta, FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"255089d923829f789f7f07cab37bb9dd5597305d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-03-25T09:44:17Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n- DMD 2.073.0\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.1.0 (currently still in beta, FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"0ce2515954b5e62962ae3d22fd52b4ecf64cea10","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-05-28T00:05:01Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.0\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"0e9a82e03853627b5d1d3fb24a990cc01a266357","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.6","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-06-08T07:54:56Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.0\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"57f82836621e13055cd805fdf3a588d5a98eceb9","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.7","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-06-16T20:06:06Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.0\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"4869b2b8e9834a4dd990f917d35098a698360fcb","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-beta.8","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-06-21T19:23:07Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.0\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"a5467f677b376cc24e3629d34771af521ddf3979","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-alpha.2 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-06-27T08:10:26Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"67ac2cf81f73854e00304c24aca5c889a627d6f4","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-rc.3 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-06-28T21:51:39Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"2cc02be438aa86698256a923443e2c0fe9217710","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-rc.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x88_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-rc.3 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"stream","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"Library of various pluggable stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"targetType":"library","sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"windows-mscoff"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"windows-optlink"},{"targetType":"library","libs-gdc":["z"],"libs-posix-ldc":["z"],"name":"generic"}],"dependencies":{"botan":{"version":"~>1.12.0","optional":true},"vibe-d:core":"*","openssl":{"default":true,"version":">=1.0.0+1.0.0e","optional":true}},"targetType":"library","path":"stream","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:textfilter":"*","vibe-d:crypto":"*","vibe-d:stream":"*","diet-ng":"~>1.2","vibe-d:diet":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-06T07:38:12Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"bc867238d3d691c701923bcc1c0d415561494125","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:textfilter":"*","vibe-d:mongodb":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-rc.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-rc.3 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","vibe-d:diet":"*","vibe-d:textfilter":"*","diet-ng":"~>1.2"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-06T23:55:36Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"632f0eb671d8817977193c6295eacc8ae31aa12b","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-rc.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-rc.3 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","vibe-d:diet":"*","vibe-d:textfilter":"*","diet-ng":"~>1.2"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-08T00:14:25Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"bdb422a3436e2c24061ae6d3006a60d311bb768d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0-rc.6","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-rc.3 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"diet","sourcePaths":["."],"description":"Diet HTML template system","dependencies":{"vibe-d:textfilter":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"diet"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","vibe-d:diet":"*","vibe-d:textfilter":"*","diet-ng":"~>1.2"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:diet":"*","vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-10T09:25:03Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/rejectedsoftware/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"edbe89b689eccd3354381c4c1f091a30bdf8ed89","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*","vibe-d:diet":"*"},"targetType":"library","version":"0.8.0","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.0.0-rc.3 <1.1.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-14T12:43:33Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"faa6ea6ba41c17d2dc44147c3b22695331b3a63c","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-17T10:00:56Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"ddae95929bea78aab84aca12aede653129beef2f","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-20T12:51:52Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"61e31d291be27af2996962dfbb7c90e40c568d51","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-23T07:48:36Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"5cdd12e0d5a60223cdfbf602edbb52364efd4e07","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-alpha.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-07-28T17:26:44Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"18a5ff5d1a4b620fbebad5d9c01ce12930f9f957","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-08-08T22:34:07Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- DMD 2.070.2\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"970cfef70090bb600a87e3f5c5f30ca195cc8bf3","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-08-11T21:09:03Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"0e482fdc56b540d8f5e12389df23b24a410ba81f","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-08-12T12:34:39Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"7695c1111177b4a6acb0d39e48986cf253250969","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-08-22T14:28:32Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"c28ce62e33a6d4d9dea827d9f3d13c759ae79fe0","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-rc.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-08-27T09:23:54Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"35fd70552592bbc12c80a1c30fcb7d4178963f4a","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1-rc.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":"~>1.0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-08-29T22:03:39Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/rejectedsoftware/vibe.d.svg?branch=master)](https://travis-ci.org/rejectedsoftware/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.075.0\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"58bc973e03736e2bd35e9fbc77c2b23674ba6e9b","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.2.1-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-09-19T21:17:49Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.076.0\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"2f5fff66e5b5016230e2ac10bc3eea0907c1078a","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.2-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.2.1-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-10-02T23:19:52Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.076.0\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"714e6bc63bf2ff4c8ee9794934eecbc64f0d9a04","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.2-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.2.1-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-11-06T16:10:03Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.076.0\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"57091ea67060af1036e8bece3e4c0a8805084100","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.2-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.2.1-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-11-18T01:12:12Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.077.0\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"a0089760742bb3672ca9a13d171af5f5f50ed6b9","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.2-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.2.1-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-12-05T14:01:32Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.077.0\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"2c8275b31ae7fff3152638e3e96926512d3f7172","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.2-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.2.1-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-12-11T18:07:30Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.077.0\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- DMD 2.071.2\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"38d5da2bd87595cf4c9c6c744301d3ee9300e730","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"},{"platforms":["windows"],"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386/runtimeobject.lib"],"versions":["VibeWinrtDriver"],"name":"winrt"},{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86_mscoff":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2016 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-12-12T19:12:11Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n","commitID":"6e3cfaffb8ca00d853d4d017f592ceb947dde30a","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"},{"targetType":"library","subConfigurations":{"vibe-d:core":"winrt"},"name":"winrt"},{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2017 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2017-12-22T20:24:39Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- DMD 2.072.2 **Warning: 2.072.0 and 2.072.1 are affected by a serious DMD regression: [16980](https://issues.dlang.org/show_bug.cgi?id=16980)**\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"358687053d977ac314c414d3e9a9da1c626edcf6","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2017 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-01-25T09:50:27Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.078.0\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"eb2da143d121be6881f5240b1bb101e5f390ed1c","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2017 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-01-28T20:16:34Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.078.0\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"f64790b66a58dc85d61ca098fedb6bbef210b93d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-alpha.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2017 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-02-26T19:53:51Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.078.0\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"0a79c301d1ae6f5003667120310a0ef561bff141","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-03-05T17:17:52Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"7ed10f5463f9dc20beaa3d05a40f485a21774a7a","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-03-07T16:21:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"17e05f2d2515f1806e88c2a4668f496be7296058","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-03-08T20:04:18Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.079.0\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"67a1b36c05cd6322b293c25b6e42548e4546e932","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-03-31T12:27:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information.\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.079.0\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"892e094a6b2153db6870e0aaa23bbd67614b7589","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.4-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Jan Krüger","Matthias Dondorff","see github for more"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-05-09T21:25:32Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.079.0\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- DMD 2.073.2\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"b6821c64f796eda6af4307d76ab108d9156ee957","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.4-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-05-19T11:54:41Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.080.0\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"65beb0e15e82be728416ad3174b00551248a61a3","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.4-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-06-02T16:35:48Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.080.0\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"27b1efe0f9f497069f427ed8d01e73daf3a18b0b","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-11-25T22:12:15Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.082.0\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"12bd88d1553326996540ed18f87e291e43146758","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libeay32.dll","../lib/win-amd64/ssleay32.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libeay32.lib","../lib/win-i386-mscoff/ssleay32.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libeay32.lib","../lib/win-amd64/ssleay32.lib"],"name":"openssl-mscoff"},{"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/eay.lib","../lib/win-i386/ssl.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libeay32.dll","../lib/win-i386/ssleay32.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2018-12-03T21:07:43Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 3 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.082.0\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"36b4ac98513db55f52ff386cc0ea8f7d0adbe49c","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preBuildCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\ttext(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\").\n\t\ttoFile(dir.buildPath(\"openssl_version.d\"));\n\t'"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-posix":["openssl_version.d"],"sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-02-10T09:16:27Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"3e3b94b5b66880bd7dca363e9d877c868945b8ed","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preBuildCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t'"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-posix":["openssl_version.d"],"sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-02-18T20:14:09Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"12b3a9e2a9bc57db6facde9a71876ad09a05a8db","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t'"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-02-24T20:09:11Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"419ec624920342225a0954e7f487773b62f50253","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-03-11T11:52:43Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"454d3955d1717265f8969c6bcd52d230481980eb","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.4.0-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-03-24T13:45:15Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"78906740fa62ff52f4c8dbe1cd51452c7f33f8b5","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.6.3-alpha.1 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-03-31T17:20:31Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"a1ce5090bd583404e15510e260cf26d32ede2d0d","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.6-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.6.3-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-05-19T12:10:52Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and \n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- DMD 2.076.1\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\nUp to 0.8.0:\n- DMD 2.070.2\n- LDC 1.0.0 (FE: 2.070.2)\n\nUp to 0.7.31+:\n- DMD 2.069.2\n\nUp to 0.7.30:\n- DMD 2.068.2\n- LDC 0.17.0-beta.2 (FE: 2.068.2)\n\nUp to 0.7.29:\n- DMD 2.067.1\n- LDC 0.16.1\n\nUp to 0.7.27:\n- DMD 2.066\n- GDC 5.2.0\n- GDC 4.9.2\n- LDC 0.15.1\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.062 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"4168d15cabf0076fa45a4bcfdbc8eb7c7e4d5941","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.6-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.6.3-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-06-30T08:31:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](http://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <http://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\nname \"hello_vibed\"\ndependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.d;\n\nvoid main()\n{\n    auto settings = new HTTPServerSettings;\n    settings.port = 8080;\n\n    listenHTTP(settings, (req, res) { res.writeBody(\"Hello Vibe.d: \" ~ req.path); });\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.083.1\n- DMD 2.082.1\n- DMD 2.081.2\n- DMD 2.080.1\n- DMD 2.079.1\n- DMD 2.078.3\n- DMD 2.077.1\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.12.0 (FE: 2.082.1)\n- LDC 1.11.0 (FE: 2.081.2)\n- LDC 1.10.0 (FE: 2.080.1)\n- LDC 1.9.0 (FE: 2.079.1)\n- LDC 1.8.0 (FE: 2.078.3)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <http://dlang.org/download.html>\n - And get the latest [DUB release](http://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<http://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <http://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_i386.deb\"\n    sudo dpkg -i dmd_2.068.2-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.068.2/dmd_2.068.2-0_amd64.deb\"\n    sudo dpkg -i dmd_2.068.2-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"665ea90c80b8e3d75af41c66b4d01764a6b98ddb","description":"Event driven web and concurrency framework","homepage":"http://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.6-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.6.3-alpha.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-08-26T12:36:54Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.13.0 (FE: 2.083.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"7041f51d393e3dad6c7ba82c95ccaadb31744f33","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.6-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","mainSourceFile":"vibe/appmain.d","buildRequirements":["requireBoundsCheck"],"name":"core","sourcePaths":["."],"description":"Basic I/O and concurrency primitives, as well as low level utility functions","configurations":[{"dependencies":{"vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","name":"vibe-core"},{"platforms":["windows-x86_mscoff-dmd"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"win32_mscoff"},{"platforms":["windows-x86-dmd","posix"],"libs-windows":["wsock32","ws2_32","advapi32"],"versions":["VibeLibeventDriver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"libevent","sourceFiles-windows-x86_64":["../lib/win-amd64/event2.lib"],"sourceFiles-windows-x86":["../lib/win-i386/event2.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libevent.dll"],"dependencies":{"libevent":"~>2.0.1"},"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libevent.dll"]},{"dependencies":{"libasync":"~>0.8.1"},"targetType":"library","versions":["VibeUseNativeDriverType","VibeLibasyncDriver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"libasync"},{"platforms":["windows"],"libs-windows":["wsock32","ws2_32","advapi32","user32"],"targetType":"library","versions":["VibeWin32Driver"],"preGenerateCommands":["echo ---","echo Deprecation: the vibe-d:core package is deprecated and will be removed in January 2020. Please update your code to depend on vibe-core instead.","echo ---"],"name":"win32"}],"dependencies":{"vibe-d:data":"*","vibe-d:utils":"*"},"targetType":"library","path":"core"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL11"],"name":"openssl-1.1"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-10-03T15:14:48Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"3c7ae13989003b7ebc59de23c5b6a0fb0466f119","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.8.6","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tauto opensslVersion = \"0.0.0\";\n\ttry {\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t}\n\t} catch (Exception e) { writeln(\"Warning: \", e); }\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2019-12-06T12:19:19Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"17ab3e4267f4b685f35bf691dd15fa68fce37ada","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tstring opensslVersion;\n\ttry {\n\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\tif (res.status == 0)\n\t\t\topensslVersion = res.output.strip();\n\t} catch (Exception e) {}\n\n\tif (!opensslVersion.length) try\n\t{\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\tversion (OSX) {\n\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {}\n\tif (!opensslVersion.length)\n\t{\n\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t writeln(\"\\tAssuming version 1.0.0.\");\n\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t opensslVersion = \"1.0.0\";\n\t}\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-02-26T11:15:00Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"a0537f394bcf0ef426d4a2c0c2fbfd4ac0a16fea","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tstring opensslVersion;\n\ttry {\n\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\tif (res.status == 0)\n\t\t\topensslVersion = res.output.strip();\n\t} catch (Exception e) {}\n\n\tif (!opensslVersion.length) try\n\t{\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\tversion (OSX) {\n\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {}\n\tif (!opensslVersion.length)\n\t{\n\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t writeln(\"\\tAssuming version 1.0.0.\");\n\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t opensslVersion = \"1.0.0\";\n\t}\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-04-17T18:40:02Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"05cfbf56b51cd31fd7fd7bc2468d91a6b8f4a6b8","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-alpha.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["rdmd --eval='\n\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\tif (dir.buildPath(\"tls\").exists)  {\n\t\tdir = dir.buildPath(\"tls\");\n\t}\n\tstring opensslVersion;\n\ttry {\n\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\tif (res.status == 0)\n\t\t\topensslVersion = res.output.strip();\n\t} catch (Exception e) {}\n\n\tif (!opensslVersion.length) try\n\t{\n\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\tversion (OSX) {\n\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {}\n\tif (!opensslVersion.length)\n\t{\n\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t writeln(\"\\tAssuming version 1.0.0.\");\n\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t opensslVersion = \"1.0.0\";\n\t}\n\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\tauto output = dir.buildPath(\"openssl_version.d\");\n\tif (!output.exists || output.readText.strip != data.strip)\n\t\tdata.toFile(output);\n\t' || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-04-26T11:37:09Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"ecbdc5d19b55619a75e087e0979e9540311ebbe6","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-alpha.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.0.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.0.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-05-26T08:52:28Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"2b59e92235125660dad9b488ccb93754cfb042ee","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-alpha.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-06-07T20:57:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"1bc9bfe2ab27cc4cd4b4deccef3b3c3964b7d112","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally libevent 2.0.x, OpenSSL 1.0.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2018 rejectedsoftware e.K.","name":"vibe-d","sourcePaths":["lib"],"date":"2020-06-26T22:53:30Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"e33cc79f61d58c121f251a831b001b6486f28c7b","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-07-26T10:11:22Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d aims to support at least the 5 latest minor releases of D.\nAt the moment, the following compilers are supported and tested:\n\n- DMD 2.087.1\n- DMD 2.086.1\n- DMD 2.085.0\n- DMD 2.084.0\n- DMD 2.077.1\n- LDC 1.17.0 (FE: 2.087.1)\n- LDC 1.16.0 (FE: 2.086.1)\n- LDC 1.15.0 (FE: 2.085.1)\n- LDC 1.14.0 (FE: 2.084.1)\n- LDC 1.7.0 (FE: 2.077.1)\n\n\nUp to 0.8.6:\n- DMD 2.076.1\n- LDC 1.6.0 (FE: 2.076.1)\n\nUp to 0.8.4:\n- DMD 2.075.1\n- DMD 2.074.1\n- LDC 1.5.0 (FE: 2.075.1)\n- LDC 1.4.0 (FE: 2.074.1)\n\nUp to 0.8.3:\n- DMD 2.073.2\n- LDC 1.3.0 (FE: 2.073.2)\n\nUp to 0.8.2:\n- DMD 2.072.2\n- LDC 1.2.0 (FE: 2.072.2)\n\nUp to 0.8.1:\n- DMD 2.071.2\n- LDC 1.1.1 (FE: 2.071.2)\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"35079d4cf348e36785783480535ff186f2e4ef02","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.0","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-08-21T17:53:50Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"d76499434093b397c9e7d708825bafc6cb611662","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-09-02T05:59:33Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"95b02fee00f5be032a6aeda48baa8607bcc4b6d0","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir."]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-09-05T17:56:06Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"7d51c4fba6e084f016998e4d55c79541b14f5040","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.3-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-10-12T19:57:45Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.org/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.org/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"a56756621d477188eeb2a53e271b11d22be328b9","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.3-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2020-12-10T07:58:46Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"e350f3221c477fb7a3c9a1a209b305894d8786aa","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.3-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-01-15T19:21:00Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"cc85a62875486855a14379af7021c1a68df5e4f1","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.3-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-01-29T10:37:00Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"6775f2c0852dc7cea20cd6e3d9298eab87d945cc","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-04-13T13:14:08Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"163d138958779c96f6953de618a184f088efb8d8","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.4-alpha.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-05-12T13:10:16Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"4b37c5b4bdb010736a1b8aee2f8927091508ba62","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.4-alpha.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-05-21T17:52:33Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"ce2877766eb8423ceeb578a1a2a9968c12597528","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.4-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-05-25T15:37:43Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"913066352e6a26f04d0fc4adc269262b233a15d4","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.4-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32_mscoff"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libevent legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libevent"},{"targetType":"none","preGenerateCommands":["echo ---","echo The libasync legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"libasync"},{"targetType":"none","preGenerateCommands":["echo ---","echo The win32 legacy driver has been removed and the vibe-core implementation is used instead. Please update your dependencies to use vibe-core directly.","echo ---"],"name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOldOpenSSL"],"name":"openssl-0.9"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-d:core":"*","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-d:core":"*"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:textfilter":"*","vibe-d:core":"*","vibe-d:stream":"*"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-07-02T08:28:54Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.0.x. On systems that use the newer\n1.1.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.1`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.1\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.1\"\n    }\n}\n```\n\nFor older systems there is also an \"openssl-0.9\" configuration that can be\nused in analogy to the above to build against the OpenSSL 0.9.8 branch.\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"94c19a4e7839eb30a613424bf13606a623079bd4","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*","vibe-d:core":"*"},"targetType":"library","version":"0.9.4-rc.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-08-26T16:45:25Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"914137d0159e84d066e002b807556e9a042ab7e0","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.4-rc.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-08-30T11:52:55Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"2ff186d7e68b849627598ab812168ce485c9e346","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.4-rc.3","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-08-30T13:29:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"103510b739c749ad0db6132e36e37b6cc6a1ccd5","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.4-rc.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-09-02T09:29:14Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"c212888ef7ec3e15b0156e6b9cc368716153b265","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.4-rc.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-09-20T12:55:40Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://travis-ci.com/vibe-d/vibe.d.svg?branch=master)](https://travis-ci.com/vibe-d/vibe.d)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nlibevent and OpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nThere are currently no 64-bit Windows binaries of libevent included, so you'll either need to build those yourself, or you can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://www.brew.sh>) and\ninstall libevent.\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install libevent\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libevent-dev libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nIf using the (now deprecated) \"libevent\" configuration, libevent is also required:\n - [libevent 2.0.x](http://libevent.org/) (*)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that some Linux distributions such as Debian Squeeze or CentOS 6 may only ship libevent 1.4, in this case you will have to manually compile the latest 2.0.x version:\n\n```\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\ntar -xf libevent-2.0.21-stable.tar.gz\ncd libevent-2.0.21-stable\n./configure\nmake\nmake install\nldconfig\n```\n\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/libevent2 devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"a87639a434992dc4516eeee44c046ed619ae2c0c","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.4-rc.6","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2021-09-30T12:24:53Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.8.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\n### Note for building on Win64\n\nYou can switch to the \"win32\" event driver by inserting `\"subConfigurations\": {\"vibe-d\": \"win32\"}` into the dub.json file of your project.\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies (*)\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_i386.deb\"\n    sudo dpkg -i dmd_2.087.1-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.087.1/dmd_2.087.1-0_amd64.deb\"\n    sudo dpkg -i dmd_2.087.1-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n(*) Note that Debian 6 (Squeeze) and older requires manual installation (see below).\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.077.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"6703986e33cfdf7a37af51e1b3d1ad61aa3502c7","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.4","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"dependencies":{"openssl":">=1.0.0+1.0.0e"},"targetType":"library","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-mscoff"},{"preGenerateCommands-posix":["echo '\n\t/+ dub.sdl:\n\tname \"script\"\n\t+/\n\timport std.algorithm;\n\timport std.conv;\n\timport std.file;\n\timport std.functional;\n\timport std.path;\n\timport std.process;\n\timport std.range;\n\timport std.stdio;\n\timport std.string;\n\timport std.uni;\n\n\tvoid main()\n\t{\n\t\tauto dir = environment.get(\"DUB_PACKAGE_DIR\");\n\t\tif (dir.buildPath(\"tls\").exists)  {\n\t\t\tdir = dir.buildPath(\"tls\");\n\t\t}\n\t\tstring opensslVersion;\n\t\ttry {\n\t\t\tconst res = execute([\"pkg-config\", \"openssl\", \"--modversion\"]);\n\t\t\tif (res.status == 0)\n\t\t\t\topensslVersion = res.output.strip();\n\t\t} catch (Exception e) {}\n\n\t\tif (!opensslVersion.length) try\n\t\t{\n\t\t\tconst res = execute([\"openssl\", \"version\"]).output;\n\t\t\tif (res.canFind(\"OpenSSL \")) {\n\t\t\t\topensslVersion = res.splitter(\" \").dropOne.front.filter!(not!(std.uni.isAlpha)).text;\n\t\t\t} else if (res.canFind(\"LibreSSL \")) {\n\t\t\t\twriteln(\"\\tWarning: Your default openssl binary points to LibreSSL, which is not supported.\");\n\t\t\t\tversion (OSX) {\n\t\t\t\t\twriteln(\"\\tOn Mac OSX, this is the default behavior.\");\n\t\t\t\t\twriteln(\"\\tIf you installed openssl via a package manager, you need to tell DUB how to find it.\");\n\t\t\t\t\twriteln(\"\\tAssuming brew, run [brew link openssl] and follow the instructions for pkg-config.\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\tif (!opensslVersion.length)\n\t\t{\n\t\t\t writeln(\"\\tWarning: Could not find OpenSSL version via pkg-config nor by calling the openssl binary.\");\n\t\t\t writeln(\"\\tAssuming version 1.1.0.\");\n\t\t\t writeln(\"\\tYou might need to export PKG_CONFIG_PATH or install the openssl package if you have a library-only package.\");\n\t\t\t opensslVersion = \"1.1.0\";\n\t\t}\n\t\tauto data = text(\"module openssl_version;\\nenum OPENSSL_VERSION=\\\"\", opensslVersion, \"\\\";\\n\");\n\t\tauto output = dir.buildPath(\"openssl_version.d\");\n\t\tif (!output.exists || output.readText.strip != data.strip)\n\t\t\tdata.toFile(output);\n\t}\n\t' | ${DUB} - || true"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl"},{"platforms":["posix","windows"],"versions":["VibeUseOpenSSL11"],"sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"name":"openssl-1.1","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"targetType":"library","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"name":"openssl-1.1-optlink"},{"platforms":["posix"],"dependencies":{"openssl":"~>1.0"},"targetType":"library","versions":["VibeUseOpenSSL10"],"name":"openssl-1.0"},{"dependencies":{"botan":"~>1.12.0"},"targetType":"library","name":"botan"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2022-05-13T15:16:55Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"f15fbb03e7de294f1a23bdcdd6bcbd7153ea428d","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.5-beta.1","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2022-06-07T17:13:43Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"8458bbca008de959d6c9914d5b897afaeb13af9d","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.5-beta.2","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","preGenerateCommands":["echo ---","echo The vibe:core sub package has been deprecated and will be removed soon. Please change your dependencies to vibe-core instead.","echo ---"],"name":"core","description":"Compatibility forwarding package for vibe-core","dependencies":{"vibe-d:data":"*","vibe-d:utils":"*","vibe-core":">=1.7.0-rc.2 <2.0.0-0"},"targetType":"none","path":"core","configurations":[{"targetType":"none","name":"vibe-core"},{"targetType":"none","name":"win32_mscoff"},{"targetType":"none","name":"libevent"},{"targetType":"none","name":"libasync"},{"targetType":"none","name":"win32"}]},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2022-07-18T15:27:21Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"7604eea772b1a733f7bfd16591ddc5bd37850bd9","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.5","configurations":[{"targetType":"library","subConfigurations":{"vibe-d:core":"vibe-core"},"name":"vibe-core"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32_mscoff"},"name":"win32_mscoff"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libevent"},"name":"libevent"},{"targetType":"library","subConfigurations":{"vibe-d:core":"libasync"},"name":"libasync"},{"targetType":"library","subConfigurations":{"vibe-d:core":"win32"},"name":"win32"}],"-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2022-11-04T08:47:39Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"2ffc5c404363c85574cc148510b969cb8fa9413b","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6-alpha.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"dependencies":{"openssl":"~>3.1"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1"},"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","name":"openssl-static"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-02-18T12:54:28Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"8581d20fd1427bbb2bf72cfbfa6d549e4e6ecfd5","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6-alpha.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"importPaths":["."],"packageDescriptionFile":"dub.sdl","name":"tls","sourcePaths":["."],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"description":"TLS stream implementations","configurations":[{"platforms":["windows-x86_mscoff","windows-x86_64","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1","openssl-static":"~>1.0"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1","openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"none"},"name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"dependencies":{"openssl":"~>3.1","openssl-static":"~>1.0"},"targetType":"library"},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"dependencies":{"openssl":"~>3.1","openssl-static":"~>1.0"},"targetType":"library"},{"platforms":["posix"],"dependencies":{"openssl":"~>3.1","openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","name":"openssl-static"},{"targetType":"library","name":"notls"}],"dependencies":{"vibe-d:stream":"*"},"targetType":"library","path":"tls","lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-02-20T09:34:49Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"cd204e66ee0c0b6dcb5d5756ac2ccd43534c2562","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6-alpha.3","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":"~>1.0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":"~>1.0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-02-23T10:47:11Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"50dcd3a9d1f8b5ab6d8338fe32fa7dae80037ff9","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6-alpha.4","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-03-02T13:06:04Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"5c94ef4e7f2a80599a70dfe77ae5bc1ed81bccd2","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6-beta.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-03-07T13:34:20Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"a8edfdab359b3082f9eb07d920cd213d57bc42c4","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6-beta.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-03-21T08:19:04Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"ab22b179e63287fb711cfc38d784c6d5ee1a743b","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.6","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-04-03T08:35:16Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"3c3340f44fba6546d4fd649bf676a07b17f11949","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.7-alpha.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*","vibe-d:crypto":"*","diet-ng":"~>1.2","vibe-d:textfilter":"*"},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-04-03T15:05:31Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"373c89b582adc6d01b7a3464860b951cd557c7b6","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.7-alpha.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-07-08T12:53:10Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"28764ff4cbb599a87f7d66d4de958727f58185b4","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.7-alpha.3","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-08-26T08:44:27Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"db6eed5b341e56298c467f65bc6ba0f0bafa8ef9","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.7-rc.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-08-29T11:24:09Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"4729575c5d22098d21625bce2a41b6d035720ecb","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.7","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"stdx-allocator":"~>2.77.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-09-15T07:58:17Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"f1342e840f51ea7dc3db92d40e7c1c90857159b0","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-alpha.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-10-02T12:27:02Z","readme":"[![vibe.d](http://vibed.org/images/logo-and-title.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"b5a7747511005640ede3d5cc3e2c914a2f22c366","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-alpha.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-10-20T08:14:46Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"d9b1dd8dd7a93bf2ac829d7475b207e7f7d280af","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-alpha.3","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-11-24T16:12:40Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"bf2eb87db14014ab2c8ab60b0b4d12bd5d8e44e6","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-alpha.4","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2023-11-27T13:15:24Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"f974b35074cba02dd87e20b6c033cee9a60fbcb5","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-beta.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.0"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-01-17T11:41:27Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"98ee426ca7696231de6fbc80634c5f1216ef3253","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-beta.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"^1.0.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":"*"},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-02-10T18:33:26Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"84c5779d16409ba0c5c4219c96d24ee8d3fbc487","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-beta.3","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.core.drivers.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.1"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":{"path":".."}},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-02-15T19:43:45Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"516b2d85657580cb4da405ab504d3ae329211f5f","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8-rc.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.1"},"importPaths":["."],"targetType":"library","path":"utils"},{"packageDescriptionFile":"dub.sdl","name":"data","sourcePaths":["."],"description":"Data format and serialization support","dependencies":{"vibe-d:utils":{"path":".."}},"importPaths":["."],"targetType":"library","path":"data"},{"packageDescriptionFile":"dub.sdl","libs-posix-ldc":["z"],"name":"stream","sourcePaths":["."],"description":"Library of various pluggable stream implementations","importPaths":["."],"dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"targetType":"library","path":"stream","libs-gdc":["z"]},{"packageDescriptionFile":"dub.sdl","subConfigurations":{"openssl-static":"none"},"name":"tls","sourcePaths":["."],"description":"TLS stream implementations","importPaths":["."],"dependencies":{"vibe-d:stream":"*","openssl":"~>3.1","openssl-static":{"version":"~>1.0","optional":true}},"targetType":"library","configurations":[{"platforms":["windows-x86_mscoff","windows-x86-ldc"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-mscoff","sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","name":"openssl"},{"platforms":["posix","windows"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1","sourceFiles-windows-x86_64":["../lib/win-amd64/libssl.lib","../lib/win-amd64/libcrypto.lib"],"sourceFiles-windows-x86":["../lib/win-i386-mscoff/libssl.lib","../lib/win-i386-mscoff/libcrypto.lib"],"copyFiles-windows-x86_64":["../lib/win-amd64/libssl-1_1-x64.dll","../lib/win-amd64/libcrypto-1_1-x64.dll"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["windows-x86-dmd"],"subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_1_0"],"name":"openssl-1.1-optlink","sourceFiles-windows-x86-dmd":["../lib/win-i386/libssl.lib","../lib/win-i386/libcrypto.lib"],"targetType":"library","copyFiles-windows-x86":["../lib/win-i386/libssl-1_1.dll","../lib/win-i386/libcrypto-1_1.dll"]},{"platforms":["posix"],"targetType":"library","subConfigurations":{"openssl":"library-manual-version","openssl-static":"none"},"versions":["DeimosOpenSSL_1_0_0"],"name":"openssl-1.0"},{"dependencies":{"openssl-static":"~>1.0"},"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"library"},"name":"openssl-static"},{"targetType":"library","subConfigurations":{"openssl":"library-manual-link","openssl-static":"none"},"versions":["VibeNoSSL"],"name":"notls"}],"lflags-osx":["-L/usr/local/opt/openssl@1.1/lib","-L/usr/local/opt/openssl/lib"],"path":"tls"},{"packageDescriptionFile":"dub.sdl","libs-windows":["advapi32"],"name":"crypto","sourcePaths":["."],"description":"Cryptographic helper routines","dependencies":{"vibe-core":">=1.0.0 <3.0.0-0","mir-linux-kernel":"~>1.0.0"},"targetType":"library","path":"crypto","importPaths":["."]},{"packageDescriptionFile":"dub.sdl","name":"textfilter","sourcePaths":["."],"description":"Text filtering routines","dependencies":{"vibe-d:utils":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"textfilter"},{"packageDescriptionFile":"dub.sdl","name":"inet","sourcePaths":["."],"description":"Internet standard functionality","dependencies":{"vibe-d:data":"*","vibe-d:textfilter":"*","vibe-d:stream":"*","vibe-core":">=1.0.0 <3.0.0-0"},"importPaths":["."],"targetType":"library","path":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-d:inet":"*","vibe-d:tls":"*"},"importPaths":["."],"targetType":"library","path":"mail"},{"packageDescriptionFile":"dub.sdl","name":"http","sourcePaths":["."],"description":"HTTP server and client implementation and higher level HTTP functionality","dependencies":{"vibe-d:inet":{"path":".."},"vibe-d:tls":{"path":".."},"vibe-d:crypto":{"path":".."},"diet-ng":"~>1.2","vibe-d:textfilter":{"path":".."}},"importPaths":["."],"targetType":"library","path":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:http":"*"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-02-16T16:33:42Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-d:tls\" version=\"~>0.8.2\"\nsubConfiguration \"vibe-d:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-d:tls\": \"*\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-d:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"756a3a48331badfdf05bff3557d8b43045b25765","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:stream":"*","vibe-d:web":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:crypto":"*","vibe-d:tls":"*","vibe-d:mongodb":"*","vibe-d:textfilter":"*","vibe-d:data":"*","vibe-d:http":"*","vibe-d:inet":"*","vibe-d:utils":"*"},"targetType":"library","version":"0.9.8","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-02-17T18:34:41Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"62d43f5ebed162512ccb9ca6abee1877d3f30372","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.0-rc.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"sourceFiles":["source/vibe/d.d","source/vibe/vibe.d"],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","sourcePaths":["lib"],"date":"2024-02-17T18:34:41Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"62d43f5ebed162512ccb9ca6abee1877d3f30372","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.0","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2024-04-12T11:08:55Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"8cc7ce8797729e1c0294e18b7fdd50b35a092d94","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.1-alpha.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2024-04-14T07:46:10Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"983cd88c2fb25af034853654be99b53aa8959c89","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.1-alpha.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2024-04-18T11:19:34Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"24c4630838731b372b097735897927bacc5c241b","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.1-alpha.3","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2024-08-30T10:30:57Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"9a83bda69c63ac1204c71ae834583abb1165c0e6","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.1-rc.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2024-09-07T15:50:39Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"7633466a248577ea3022e731732fe3aa57f90654","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.1","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]},{"packageDescriptionFile":"dub.sdl","targetName":"vibed","authors":["Sönke Ludwig","Mathias 'Geod24' Lang","Etienne Cimon","Martin Nowak","Mihails 'Dicebot' Strasuns","150 contributors total"],"systemDependencies":"Optionally OpenSSL 1.1.x","subPackages":[{"packageDescriptionFile":"dub.sdl","name":"utils","sourcePaths":["."],"description":"Low level utility functionality","dependencies":{"vibe-container":"~>1.2"},"importPaths":["."],"targetType":"library","path":"utils"},{"description":"Data format and serialization support","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-serialization":">=1.0.0-0 <2.0.0-0"},"targetType":"none","path":"data","name":"data"},{"description":"Library of various pluggable stream implementations","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-stream":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"stream","name":"stream"},{"packageDescriptionFile":"dub.sdl","name":"tls","description":"TLS stream implementations","dependencies":{"vibe-stream:tls":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"tls","configurations":[{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-mscoff"},"name":"openssl-mscoff"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl"},"name":"openssl"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1"},"name":"openssl-1.1"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.1-optlink"},"name":"openssl-1.1-optlink"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-1.0"},"name":"openssl-1.0"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"openssl-static"},"name":"openssl-static"},{"targetType":"none","subConfigurations":{"vibe-stream:tls":"notls"},"name":"notls"}]},{"description":"Cryptographic helper routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:crypto":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"crypto","name":"crypto"},{"description":"Text filtering routines","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet:textfilter":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"textfilter","name":"textfilter"},{"description":"Internet standard functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-inet":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"inet","name":"inet"},{"packageDescriptionFile":"dub.sdl","name":"mail","sourcePaths":["."],"description":"SMTP client support","dependencies":{"vibe-inet":"~>1.0","vibe-stream:tls":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mail"},{"description":"HTTP server and client implementation and higher level HTTP functionality","packageDescriptionFile":"dub.sdl","dependencies":{"vibe-http":">=1.0.0-rc.1 <2.0.0-0"},"targetType":"none","path":"http","name":"http"},{"packageDescriptionFile":"dub.sdl","name":"mongodb","sourcePaths":["."],"description":"MongoDB database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"mongodb"},{"packageDescriptionFile":"dub.sdl","name":"redis","sourcePaths":["."],"description":"Redis database client implementation","dependencies":{"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"redis"},{"packageDescriptionFile":"dub.sdl","name":"web","sourcePaths":["."],"description":"High level web and REST service framework","dependencies":{"vibe-d:utils":{"path":".."},"vibe-http":"~>1.0"},"importPaths":["."],"targetType":"library","path":"web"}],"license":"MIT","copyright":"Copyright © 2012-2020 Sönke Ludwig","name":"vibe-d","date":"2025-02-14T14:10:11Z","readme":"[![vibe.d](https://vibed.org/images/title-new.png)](http://vibed.org)\n\nvibe.d is a high-performance asynchronous I/O, concurrency and web application\ntoolkit written in D. It already contains many supplemental features such as\ndatabase support to be able to offer a complete development environment. For\nmore specialized needs, there are also many compatible\n[DUB packages](https://code.dlang.org/?sort=updated&category=library.vibed)\navailable.\n\nVisit the website at <https://vibed.org/> for more information and\n[documentation](https://vibed.org/docs).\n\n[![DUB Package](https://img.shields.io/dub/v/vibe-d.svg)](https://code.dlang.org/packages/vibe-d)\n[![Posix Build Status](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml/badge.svg)](https://github.com/vibe-d/vibe.d/actions/workflows/ci.yml)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/cp2kxg70h54pga9d/branch/master?svg=true)](https://ci.appveyor.com/project/s-ludwig/vibe-d/branch/master)\n\nHello Vibe.d\n------------\n\n```d\n#!/usr/bin/env dub\n/+ dub.sdl:\n   name \"hello_vibed\"\n   dependency \"vibe-d\" version=\"~>0.9.0\"\n+/\nimport vibe.vibe;\n\nvoid main()\n{\n    listenHTTP(\"127.0.0.1:8080\", (req, res) {\n        res.writeBody(\"Hello Vibe.d: \" ~ req.path);\n    });\n\n    runApplication();\n}\n```\n\nDownload this file as `hello.d` and run it with [DUB](https://github.com/dlang/dub):\n\n```\n> dub hello.d\n```\n\n(or `chmod +x` and execute it: `./hello.d`)\n\nAlternatively, you can quickstart with examples directly on [![Open on run.dlang.io](https://img.shields.io/badge/run.dlang.io-open-blue.svg)](https://run.dlang.io/is/qTsfv6).\n\n\nProject structure\n-----------------\n\nThe vibe.d project is structured into multiple repositories:\n\n- `vibe-d` (this repository): The high level web and REST framework, HTTP, STMP and Redis/MongoDB functionality\n- [`vibe-http`](https://github.com/vibe-d/vibe-http): HTTP client/server implementation including WebSockets, proxy, sessions etc.\n- [`vibe-stream`](https://github.com/vibe-d/vibe-stream): Advanced stream types and TLS stream support\n- [`vibe-inet`](https://github.com/vibe-d/vibe-inet): Internet standard functionality (URL, form encoding, HTML encoding, ...)\n- [`vibe-core`](https://github.com/vibe-d/vibe-core): Fiber based I/O and concurrency implementation\n- [`vibe-serialization`](https://github.com/vibe-d/vibe-serialization): Serialization and structured data format support\n- [`vibe-container`](https://github.com/vibe-d/vibe-container): Container implementations used throughout the project\n- [`vibe-sdl`](https://github.com/vibe-d/vibe-sdl): [SDLang](https://sdlang.org) serialization support based on [`sdlite`](https://github.com/s-ludwig/sdlite)\n- [`vibe-compat`](https://github.com/vibe-d/vibe-compat): Legacy functionality\n- [`observable`](https://github.com/vibe-d/observable): Observable, signal/slot and reactive value implementations\n- [`diet`](https://github.com/rejectedsoftware/diet-ng): pug.js inspired compile-time HTML template system with `vibe.web` integration\n- [`eventcore`](https://github.com/vibe-d/eventcore): Low-level abstraction over the operating system's asynchronous I/O facilities\n\nYou can find an API overview of the whole project in the [API documentation](https://vibed.org/api/).\n\n\nSupport\n-------\n\nVibe.d supports the 10 latest minor releases of DMD.\nFor example, if the current version is v2.090.1,\nthen v2.089.x, v2.088.x, ... v2.080.x are supported.\nNote that support for patch release is desireable,\nbut only support for the last patch in a minor is guaranteed.\n\nAdditionally, Vibe.d supports all LDC versions that implement\nthe version of a supported frontend (e.g. by the previous rule\n[LDC v1.20.0](https://github.com/ldc-developers/ldc/releases/tag/v1.20.0)\nimplements v2.090.1 and would be supported).\n\n\nInstallation\n------------\n\nInstead of explicitly installing vibe.d, it is recommended to use\n[DUB](https://github.com/dlang/dub) for building vibe.d based\napplications. Once DUB is installed, you can create and run a new project\nusing the following shell commands:\n\n    dub init <name> -t vibe.d\n    cd <name>\n    dub\n\nSimilarly, you can run an example by invoking `dub` from any of the\nexample project directories.\n\nNote that on non-Windows operating systems, you also need to have\nOpenSSL installed - and of course a D compiler. See below\nfor instructions.\n\n\nAdditional setup on Windows\n---------------------------\n\n - Just install DMD using the installer on <https://dlang.org/download.html>\n - And get the latest [DUB release](https://code.dlang.org/download)\n\nAdditional setup on Mac using brew\n----------------------------------\n\nIf you don't have brew installed, install it according to their [install\ninstructions](<https://brew.sh>).\n\nYou can then also install DUB using brew:\n\n    brew install dub\n\n(Note: Install brew only if you do not have macports, as they will conflict)\n\nInstall DMD using the installer on <https://dlang.org/download.html>.\n\nOptionally, run `./setup-mac.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (Debian/Ubuntu/Mint)\n----------------------------------------------\n\nInstall vibe.d's dependencies:\n\n    sudo apt-get install libssl-dev\n\n\nOn 32-bit linux: Install DMD-i386\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_i386.deb\"\n    sudo dpkg -i dmd_2.098.0-0_i386.deb\n\n\nOn 64-bit linux: Install DMD-amd64\n\n    sudo apt-get install g++ gcc-multilib xdg-utils\n    wget \"http://downloads.dlang.org/releases/2.x/2.098.0/dmd_2.098.0-0_amd64.deb\"\n    sudo dpkg -i dmd_2.098.0-0_amd64.deb\n\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\n\nAdditional setup on Linux (generic)\n-----------------------------------\n\nYou need to have the following dependencies installed:\n\n - [DMD 2.088.1 or greater](http://dlang.org/download)\n - [libssl](http://www.openssl.org/source/)\n\nOptionally, run `./setup-linux.sh` to create a user/group pair for privilege lowering.\n\nAdditional setup on FreeBSD\n---------------------------\n\nInstall the DMD compiler and vibe.d's dependencies using portupgrade or a similar mechanism:\n\n    sudo portupgrade -PN devel/pkgconf\n\nOptionally, run `./setup-freebsd.sh` to create a user/group pair for privilege lowering.\n\n\nSwitching between OpenSSL versions\n----------------------------------\n\nBy default, vibe.d is built against OpenSSL 1.1.x. On systems that use the older\n1.0.x branch, this can be overridden on the DUB command line using\n`--override-config vibe-d:tls/openssl-1.0`. Alternatively, the same can be done\nusing a sub configuration directive in the package recipe:\n\nSDL syntax:\n```\ndependency \"vibe-stream:tls\" version=\"~>1.0\"\nsubConfiguration \"vibe-stream:tls\" \"openssl-1.0\"\n```\n\nJSON syntax:\n```\n{\n    ...\n    \"dependencies\": {\n        ...\n        \"vibe-stream:tls\": \"~>1.0\"\n    },\n    \"subConfigurations\": {\n        ...\n        \"vibe-stream:tls\": \"openssl-1.0\"\n    }\n}\n```\n\nFinally, there is a \"botan\" configuration for using the D port of the Botan\nlibrary.\n","commitID":"faf66b99de605b8a4eb8af37bc8b49f0f0e1c922","description":"Event driven web and concurrency framework","homepage":"https://vibed.org/","dependencies":{"vibe-d:web":"*","vibe-d:utils":"*","vibe-d:mail":"*","vibe-d:redis":"*","vibe-d:http":"*","vibe-d:mongodb":"*"},"targetType":"library","version":"0.10.2","-ddoxFilterArgs":["--unittest-examples","--min-protection=Protected","--ex","vibe.container.internal.","--ex","vibe.data.internal.","--ex","vibe.internal.","--ex","vibe.web.internal.","--ex","diet.internal","--ex","stdx.","--ex","eventcore.internal.","--ex","eventcore.drivers.","--ex","mir.","--ex","openssl_version"]}],
    "categories":["library.web.framework","library.network","library.vibed","library.general"],
    "name":"vibe-d",
    "documentationURL":"https://vibed.org/docs",
    "repository":{"kind":"github","owner":"vibe-d","project":"vibe.d"}
}
